{"version":3,"sources":["components/Input.jsx","components/Typography.jsx","components/Button.jsx","views/Login.js","views/Dashboard.jsx","help/data.js","views/CreateExercise.jsx","views/CreateWorkout.jsx","App.js","serviceWorker.js","index.js"],"names":["Field","styled","div","Label","label","Input","input","props","placeholder","type","value","onChange","PageTitle","h1","Button","button","secondary","actionType","onClick","text","FlexColumn","M_LOGIN","gql","history","useHistory","useState","email","setEmail","password","setPassword","useMutation","onError","err","console","log","login","result","useEffect","data","handleLogin","e","a","preventDefault","variables","loginResult","success","push","target","to","difficulties","id","name","types","targets","categories","FormWrapper","M_CREATE_EXERCISE","ReviewCard","ReviewCardItem","TitleInput","setName","description","setDesctiption","difficulty","setDifficulty","setTarget","setType","onSuccess","setOnSuccess","error","createExercise","handleSubmit","submitResult","map","key","Q_EXERCISES","setCategory","useQuery","loading","message","for","category","getExercises","ex","GlobalStyle","createGlobalStyle","Main","main","Wrapper","App","path","component","Login","exact","Dashboard","CreateExercise","CreateWorkout","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","catch","httpLink","createHttpLink","uri","credentials","client","ApolloClient","link","cache","InMemoryCache","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d6690c86.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Field = styled.div`\n  padding: 16px 0;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Label = styled.label`\n  font-size: 12px;\n  font-weight: bold;\n  letter-spacing: 0.2px;\n  margin-bottom: 6px;\n  color: #383838;\n`;\n\nconst Input = styled.input`\n  border: none;\n  border-radius: 2px;\n  min-height: 42px;\n  padding: 0 14px;\n  flex: 1;\n  background: #f3f3f5;\n  font-size: 14px;\n  transition: box-shadow 180ms ease-in-out;\n  &:focus {\n    outline: none !important;\n    box-shadow: 0 0 0 1px #a6abf0;\n  }\n`;\n\nexport default props => {\n  return (\n    <Field>\n      <Label>{props.label}</Label>\n      <Input\n        placeholder={props.placeholder}\n        type={props.type}\n        value={props.value}\n        onChange={props.onChange}\n      />\n    </Field>\n  );\n};\n","import styled from 'styled-components';\n\nconst headingStyles = `\n  font-family: 'Open Sans', sans-serif;\n`;\n\nconst textStyles = `\n  font-family: 'Inter', sans-serif;\n`;\n\nexport const PageTitle = styled.h1`\n  font-weight: 800;\n  font-family: 'Open Sans', monospace;\n  margin-bottom: 80px;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  border: 1px solid black;\n  padding: 4px 12px;\n  font-weight: 500;\n  font-size: 16px;\n  cursor: pointer;\n\n  background-color: ${props => (props.secondary ? 'transparent' : '#a6abf0')};\n  margin-top: 8px;\n\n  &:first-of-type {\n    margin-top: 0;\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  &:active {\n    background: #8589c5;\n  }\n`;\n\nexport default props => {\n  return (\n    <Button secondary={props.secondary} actionType={props.actionType} onClick={props.onClick}>\n      {props.text}\n    </Button>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Input from '../components/Input';\nimport { PageTitle } from '../components/Typography';\nimport Button from '../components/Button';\nimport { gql } from 'apollo-boost';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Link, Redirect, useHistory } from 'react-router-dom';\n\nexport const FlexColumn = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst M_LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      success\n    }\n  }\n`;\n\nexport default () => {\n  const history = useHistory();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [login, result] = useMutation(M_LOGIN, {\n    onError: err => console.log(err),\n  });\n\n  useEffect(() => {\n    if (result.data) {\n    }\n  }, [result.data]);\n\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const loginResult = await login({ variables: { email, password } });\n      const success = loginResult.data.login.success;\n      if (success) {\n        history.push('/');\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div>\n      <PageTitle>Log In</PageTitle>\n\n      <Input type=\"text\" label=\"Email\" onChange={e => setEmail(e.target.value)} value={email} />\n\n      <Input\n        type=\"password\"\n        label=\"Password\"\n        value={password}\n        onChange={e => setPassword(e.target.value)}\n      />\n\n      <FlexColumn>\n        <Button actionType=\"submit\" text=\"Log In\" onClick={handleLogin} />\n        <Link to=\"/sign-up\">Don't have an account? Sign Up</Link>\n      </FlexColumn>\n    </div>\n  );\n};\n","import React from 'react';\nimport { PageTitle } from '../components/Typography';\nimport Button from '../components/Button';\nimport { FlexColumn } from './Login';\n\nexport default ({ history }) => {\n  return (\n    <div>\n      <FlexColumn>\n        <PageTitle>Dashboard</PageTitle>\n        <Button onClick={() => history.push('/create-exercise')} text=\"Create Exercise\" />\n        <Button onClick={() => history.push('/create-workout')} text=\"Create Workout\" />\n      </FlexColumn>\n    </div>\n  );\n};\n","export const difficulties = [\n  {\n    id: 1,\n    name: 'Beginner',\n    value: 'beginner',\n  },\n  {\n    id: 2,\n    name: 'Intermediate',\n    value: 'intermediate',\n  },\n  {\n    id: 3,\n    name: 'Advanced',\n    value: 'advanced',\n  },\n];\n\nexport const types = [\n  {\n    id: 1,\n    name: 'Push',\n    value: 'push',\n  },\n  {\n    id: 2,\n    name: 'Pull',\n    value: 'pull',\n  },\n];\n\nexport const targets = [\n  {\n    id: 1,\n    name: 'Chest',\n    value: 'chest',\n  },\n  {\n    id: 2,\n    name: 'Back',\n    value: 'back',\n  },\n  {\n    id: 3,\n    name: 'Shoulders',\n    value: 'shoulders',\n  },\n  {\n    id: 4,\n    name: 'Biceps',\n    value: 'biceps',\n  },\n  {\n    id: 5,\n    name: 'Legs',\n    value: 'legs',\n  },\n  {\n    id: 6,\n    name: 'Glutes',\n    value: 'glutes',\n  },\n  {\n    id: 7,\n    name: 'Triceps',\n    value: 'triceps',\n  },\n  {\n    id: 8,\n    name: 'Abs',\n    value: 'abs',\n  },\n];\n\nexport const categories = [\n  {\n    id: 1,\n    name: 'gym',\n    value: 'Gym',\n  },\n  {\n    id: 2,\n    name: 'Home',\n    value: 'home',\n  },\n  {\n    id: 3,\n    name: 'Outdoors',\n    value: 'outdoors',\n  },\n];\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { PageTitle } from '../components/Typography';\nimport Button from '../components/Button';\nimport { FlexColumn } from './Login';\nimport Input from '../components/Input';\nimport { gql } from 'apollo-boost';\nimport { useMutation } from '@apollo/react-hooks';\nimport { difficulties, targets, types } from '../help/data';\n\nexport const FormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  > * {\n    margin-bottom: 20px;\n  }\n`;\n\nconst M_CREATE_EXERCISE = gql`\n  mutation createExercise(\n    $name: String!\n    $description: String\n    $type: String\n    $difficulty: String\n    $target: String!\n  ) {\n    createExercise(\n      name: $name\n      description: $description\n      type: $type\n      difficulty: $difficulty\n      target: $target\n    ) {\n      name\n    }\n  }\n`;\n\nconst ReviewCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 20px 16px;\n  border-radius: 4px;\n  border: 2px solid #a6abf0;\n`;\n\nconst ReviewCardItem = styled.div`\n  margin-bottom: 8px;\n\n  span {\n    padding: 2px 4px;\n    font-size: 12px;\n    font-weight: bold;\n    letter-spacing: 0.2px;\n    background: #f3f3f5;\n  }\n\n  p {\n    margin-top: 6px;\n  }\n`;\n\nconst TitleInput = styled.input`\n  padding: 10px 20px;\n  border: none;\n  border-radius: 2px;\n  border-bottom: 6px solid #262626;\n  font-size: 24px;\n  font-weight: 800;\n  font-family: 'Open Sans', sans-serif;\n\n  &:focus {\n    outline: none !important;\n    border-top: 2px solid #262626;\n    border-left: 2px solid #262626;\n    border-right: 2px solid #262626;\n  }\n\n  &::placeholder {\n    color: #c3c5db;\n  }\n`;\n\nexport default () => {\n  const history = useHistory();\n  const [name, setName] = useState('');\n  const [description, setDesctiption] = useState('');\n  const [difficulty, setDifficulty] = useState(null);\n  const [target, setTarget] = useState(null);\n  const [type, setType] = useState(null);\n  const [onSuccess, setOnSuccess] = useState(false);\n\n  const [createExercise, result] = useMutation(M_CREATE_EXERCISE, {\n    onError: err => console.error(err),\n  });\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const submitResult = await createExercise({\n        variables: { name, description, difficulty, type, target },\n      });\n      const result = submitResult.data.createExercise.name;\n\n      if (result) setOnSuccess(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const successComponent = () => {\n    return (\n      <ReviewCard>\n        <h2>{name}</h2>\n        <ReviewCardItem>\n          <span>Description</span>\n          <p>{description}</p>\n        </ReviewCardItem>\n        <ReviewCardItem>\n          <span>Target</span>\n          <p>{target}</p>\n        </ReviewCardItem>\n        <ReviewCardItem>\n          <span>Type</span>\n          <p>{type}</p>\n        </ReviewCardItem>\n      </ReviewCard>\n    );\n  };\n\n  const formComponent = () => {\n    return (\n      <FlexColumn>\n        <PageTitle>Create Exercise</PageTitle>\n        <TitleInput placeholder=\"Name\" />\n        <FormWrapper>\n          <Input label=\"Name\" value={name} onChange={e => setName(e.target.value)} />\n          <textarea\n            placeholder=\"description\"\n            value={description}\n            onChange={e => setDesctiption(e.target.description)}\n          ></textarea>\n          <select onClick={e => setDifficulty(e.target.value)}>\n            {difficulties.map(difficulty => (\n              <option key={difficulty.id} value={difficulty.value}>\n                {difficulty.name}\n              </option>\n            ))}\n          </select>\n          <select onClick={e => setType(e.target.value)}>\n            {types.map(type => (\n              <option key={type.id} value={type.value}>\n                {type.name}\n              </option>\n            ))}\n          </select>\n          <select onClick={e => setTarget(e.target.value)}>\n            {targets.map(target => (\n              <option key={target.id} value={target.value}>\n                {target.name}\n              </option>\n            ))}\n          </select>\n        </FormWrapper>\n        <Button text=\"Create\" onClick={handleSubmit} />\n        <Button secondary={true} text=\"Cancel\" onClick={() => history.push('/')} />\n      </FlexColumn>\n    );\n  };\n\n  return <div>{onSuccess ? successComponent() : formComponent()}</div>;\n};\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FlexColumn } from './Login';\nimport { PageTitle } from '../components/Typography';\nimport { FormWrapper } from '../views/CreateExercise';\nimport Input from '../components/Input';\nimport { difficulties, targets, categories } from '../help/data';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\n\nconst Q_EXERCISES = gql`\n  {\n    getExercises {\n      name\n    }\n  }\n`;\n\nexport default () => {\n  const history = useHistory();\n  const [name, setName] = useState('');\n  const [description, setDesctiption] = useState('');\n  const [difficulty, setDifficulty] = useState(null);\n  const [target, setTarget] = useState(null);\n  const [category, setCategory] = useState(null);\n  const [onSuccess, setOnSuccess] = useState(false);\n\n  const { loading, error, data } = useQuery(Q_EXERCISES);\n\n  if (loading) return 'loading...';\n  if (error) return `Error! ${error.message}`;\n  /*const [createWorkout, result] = useMutation(M_CREATE_EXERCISE, {\n    onError: err => console.error(err),\n  }); */\n\n  return (\n    <FlexColumn>\n      <PageTitle>Create Workout</PageTitle>\n      <FormWrapper>\n        <Input label=\"Name\" value={name} onChange={e => setName(e.target.value)} />\n        <input name=\"anon\" type=\"checkbox\" />\n        <label for=\"anon\">Anonymous</label>\n        <select onClick={e => setDifficulty(e.target.value)}>\n          {difficulties.map(difficulty => (\n            <option key={difficulty.id} value={difficulty.value}>\n              {difficulty.name}\n            </option>\n          ))}\n        </select>\n        <select onClick={e => setTarget(e.target.value)}>\n          {targets.map(target => (\n            <option key={target.id} value={target.value}>\n              {target.name}\n            </option>\n          ))}\n        </select>\n        <select onClick={e => setCategory(e.target.value)}>\n          {categories.map(category => (\n            <option key={category.id} value={category.value}>\n              {category.name}\n            </option>\n          ))}\n        </select>\n        <div>\n          {data.getExercises.map(ex => (\n            <h3>{ex.name}</h3>\n          ))}\n        </div>\n      </FormWrapper>\n    </FlexColumn>\n  );\n};\n","import React from 'react';\nimport { BrowserRouter, Route, useHistory } from 'react-router-dom';\nimport styled, { createGlobalStyle } from 'styled-components';\n\nimport './App.css';\n\nimport Login from './views/Login';\nimport Dashboard from './views/Dashboard';\nimport CreateExercise from './views/CreateExercise';\nimport CreateWorkout from './views/CreateWorkout';\n\nconst GlobalStyle = createGlobalStyle`\n\n  * {\n    color: #262626;\n  }\n  body, h1, h2, h3, h4, p {\n    margin: 0;\n    padding: 0;\n    font-family: 'Source Sans Pro', sans-serif;\n  }\n\n  h2 {\n    font-weight: 800;\n    font-family: 'Open Sans', sans-serif;\n    margin-bottom: 20px;\n  }\n`;\n\nconst Main = styled.main`\n  padding: 20vh 24px 24px 24px;\n`;\n\nconst Wrapper = styled.div`\n  max-width: 275px;\n  margin: 0 auto;\n`;\n\nconst App = props => {\n  return (\n    <BrowserRouter>\n      <GlobalStyle />\n      <Main>\n        <Wrapper>\n          <Route path=\"/login\" component={Login} />\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/create-exercise\" component={CreateExercise} />\n          <Route path=\"/create-workout\" component={CreateWorkout} />\n          {/* <Route path=\"/sign-up\" component={SignUp} /> */}\n        </Wrapper>\n      </Main>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { ApolloProvider } from 'react-apollo';\nimport { ApolloClient } from 'apollo-client';\nimport { createHttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\n\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:8000/graphql',\n  credentials: 'include',\n});\n\nconst client = new ApolloClient({\n  link: httpLink,\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}